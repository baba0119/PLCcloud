// ==================================
// PLCcloud - processing - ladderrun
// --------------------------------------------------------------
// ラダープログラムの実行
// 仮想的に実行をするパッケージ
// ==================================

//
// ラダープログラムのマッピング後の構造化データについて
//
/*
===================================
・ラダープログラムのマッピング後の構造化データ
　--------------------------------------------------------------

　＞入力スライス
　　2次元構造体スライス
　　- 入力スライス
　　- 出力キー
　　これら二つのセット

　＞出力スライス群
　　- GPIO出力スライス
　　- 仮想普通出力スライス
　　- カウンター出力スライス
　　- タイマ出力スライス

　- ラダー図の分岐について
　分岐に関しては、分岐の始まりと終わりそれぞれを示す
　情報を構造化データの中に組み込んだ。

　それを参照して OR演算 するか AND演算 するかを決める
　-> 分岐終端が来た時にキャッシュのbool値とOR演算

===================================
*/

//
// 入力部の処理とデータについて
//
/*
===================================
・マッピング後ラダープログラムの入力部
　--------------------------------------------------------------

　ブロック内ではない
　＞分岐もしていない
　　ブロックの終端から始端の間

　ブロック内でなければ順次AND演算
　ブロックとブロックはOR演算
　ブロック内 行内演算は順次AND演算
　ブロック内 列演算は順次OR

　********************************************
　データキャッシュ(スライス)
　--------------------------------------------------------------
　- データ
　　列演算キャッシュ []boolean
　　ブロック演算キャッシュ []boolean

　- 処理
　　ブロック端まで行ったら列演算キャッシュ内のデータを
　　OR演算

　　ブロック終端を迎えたらブロック演算キャッシュ内の
　　データをAND演算

　********************************************

　また出力先を参照するデータ(出力キー)をセットで持つ

===================================
*/

//
// 出力部の処理
//
/*
===================================
　出力部の処理
　--------------------------------------------------------------

　特殊出力状態保持データと出力保持データのふたつが
　影響してくる

　・特殊出力状態保持データ
　　タイマやカウンタしか持たない独特なデータを保持する

　・出力保持データ
　　出力の状態を一元管理する

　　- GPIO仮想マッピング
　　- 出力を参照する入力

　　これらから参照される。
　
===================================
*/

package ladderrun